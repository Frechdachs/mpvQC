# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui/main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        MainWindow.setWindowTitle("mpvQC")
        self.mainWindowContentWidget = QtWidgets.QWidget(MainWindow)
        self.mainWindowContentWidget.setObjectName("mainWindowContentWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.mainWindowContentWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.mainWindowContentSplitter = QtWidgets.QSplitter(self.mainWindowContentWidget)
        self.mainWindowContentSplitter.setOrientation(QtCore.Qt.Vertical)
        self.mainWindowContentSplitter.setObjectName("mainWindowContentSplitter")
        self.verticalLayout.addWidget(self.mainWindowContentSplitter)
        MainWindow.setCentralWidget(self.mainWindowContentWidget)
        self.mainWindowMenuBar = QtWidgets.QMenuBar(MainWindow)
        self.mainWindowMenuBar.setGeometry(QtCore.QRect(0, 0, 800, 30))
        self.mainWindowMenuBar.setObjectName("mainWindowMenuBar")
        self.mainWindowFileMenu = QtWidgets.QMenu(self.mainWindowMenuBar)
        self.mainWindowFileMenu.setObjectName("mainWindowFileMenu")
        self.mainWindowVideoMenu = QtWidgets.QMenu(self.mainWindowMenuBar)
        self.mainWindowVideoMenu.setObjectName("mainWindowVideoMenu")
        self.mainWindowSettingsMenu = QtWidgets.QMenu(self.mainWindowMenuBar)
        self.mainWindowSettingsMenu.setObjectName("mainWindowSettingsMenu")
        self.menuWindowTitle = QtWidgets.QMenu(self.mainWindowSettingsMenu)
        self.menuWindowTitle.setObjectName("menuWindowTitle")
        self.menuDocumentSettings = QtWidgets.QMenu(self.mainWindowSettingsMenu)
        self.menuDocumentSettings.setObjectName("menuDocumentSettings")
        self.menuLanguage = QtWidgets.QMenu(self.mainWindowSettingsMenu)
        self.menuLanguage.setObjectName("menuLanguage")
        self.mainWindowAboutMenu = QtWidgets.QMenu(self.mainWindowMenuBar)
        self.mainWindowAboutMenu.setObjectName("mainWindowAboutMenu")
        MainWindow.setMenuBar(self.mainWindowMenuBar)
        self.actionNewQcDocument = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-new")
        self.actionNewQcDocument.setIcon(icon)
        self.actionNewQcDocument.setObjectName("actionNewQcDocument")
        self.actionOpenQcDocuments = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-open-recent")
        self.actionOpenQcDocuments.setIcon(icon)
        self.actionOpenQcDocuments.setObjectName("actionOpenQcDocuments")
        self.actionSaveQcDocument = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-save")
        self.actionSaveQcDocument.setIcon(icon)
        self.actionSaveQcDocument.setObjectName("actionSaveQcDocument")
        self.actionSaveQcDocumentAs = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-save-as")
        self.actionSaveQcDocumentAs.setIcon(icon)
        self.actionSaveQcDocumentAs.setObjectName("actionSaveQcDocumentAs")
        self.actionExitMpvQc = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("application-exit")
        self.actionExitMpvQc.setIcon(icon)
        self.actionExitMpvQc.setObjectName("actionExitMpvQc")
        self.actionOpenVideoFile = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("mpv")
        self.actionOpenVideoFile.setIcon(icon)
        self.actionOpenVideoFile.setObjectName("actionOpenVideoFile")
        self.actionOpenNetworkStream = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("network-server")
        self.actionOpenNetworkStream.setIcon(icon)
        self.actionOpenNetworkStream.setObjectName("actionOpenNetworkStream")
        self.actionResizeVideoToOriginalResolution = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("image-resize")
        self.actionResizeVideoToOriginalResolution.setIcon(icon)
        self.actionResizeVideoToOriginalResolution.setObjectName("actionResizeVideoToOriginalResolution")
        self.actionCheckForUpdates = QtWidgets.QAction(MainWindow)
        self.actionCheckForUpdates.setEnabled(False)
        icon = QtGui.QIcon.fromTheme("arrow-down")
        self.actionCheckForUpdates.setIcon(icon)
        self.actionCheckForUpdates.setObjectName("actionCheckForUpdates")
        self.actionAboutQt = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("help-about")
        self.actionAboutQt.setIcon(icon)
        self.actionAboutQt.setObjectName("actionAboutQt")
        self.actionAboutMpvQc = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("help-about")
        self.actionAboutMpvQc.setIcon(icon)
        self.actionAboutMpvQc.setObjectName("actionAboutMpvQc")
        self.actionSettings = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("preferences-other")
        self.actionSettings.setIcon(icon)
        self.actionSettings.setObjectName("actionSettings")
        self.actionOpenSubtitleFile = QtWidgets.QAction(MainWindow)
        self.actionOpenSubtitleFile.setEnabled(False)
        icon = QtGui.QIcon.fromTheme("media-view-subtitles-symbolic")
        self.actionOpenSubtitleFile.setIcon(icon)
        self.actionOpenSubtitleFile.setObjectName("actionOpenSubtitleFile")
        self.actionEditCommentTypes = QtWidgets.QAction(MainWindow)
        self.actionEditCommentTypes.setObjectName("actionEditCommentTypes")
        self.actionEditNickname = QtWidgets.QAction(MainWindow)
        self.actionEditNickname.setObjectName("actionEditNickname")
        self.actionWindowTitleDefault = QtWidgets.QAction(MainWindow)
        self.actionWindowTitleDefault.setCheckable(True)
        self.actionWindowTitleDefault.setChecked(False)
        self.actionWindowTitleDefault.setObjectName("actionWindowTitleDefault")
        self.actionWindowTitleFile = QtWidgets.QAction(MainWindow)
        self.actionWindowTitleFile.setCheckable(True)
        self.actionWindowTitleFile.setChecked(False)
        self.actionWindowTitleFile.setObjectName("actionWindowTitleFile")
        self.actionWindowTitlePath = QtWidgets.QAction(MainWindow)
        self.actionWindowTitlePath.setCheckable(True)
        self.actionWindowTitlePath.setChecked(False)
        self.actionWindowTitlePath.setObjectName("actionWindowTitlePath")
        self.actionDarkTheme = QtWidgets.QAction(MainWindow)
        self.actionDarkTheme.setCheckable(True)
        self.actionDarkTheme.setObjectName("actionDarkTheme")
        self.actionEditMpvConf = QtWidgets.QAction(MainWindow)
        self.actionEditMpvConf.setObjectName("actionEditMpvConf")
        self.actionEditInputConf = QtWidgets.QAction(MainWindow)
        self.actionEditInputConf.setObjectName("actionEditInputConf")
        self.actionDocumentBackups = QtWidgets.QAction(MainWindow)
        self.actionDocumentBackups.setCheckable(True)
        self.actionDocumentBackups.setObjectName("actionDocumentBackups")
        self.actionOpenBackupPreferences = QtWidgets.QAction(MainWindow)
        self.actionOpenBackupPreferences.setObjectName("actionOpenBackupPreferences")
        self.actionSaveNickNameToDocument = QtWidgets.QAction(MainWindow)
        self.actionSaveNickNameToDocument.setCheckable(True)
        self.actionSaveNickNameToDocument.setChecked(False)
        self.actionSaveNickNameToDocument.setObjectName("actionSaveNickNameToDocument")
        self.actionSaveVideoPathToDocument = QtWidgets.QAction(MainWindow)
        self.actionSaveVideoPathToDocument.setCheckable(True)
        self.actionSaveVideoPathToDocument.setObjectName("actionSaveVideoPathToDocument")
        self.action_3 = QtWidgets.QAction(MainWindow)
        self.action_3.setText("placeholder")
        self.action_3.setObjectName("action_3")
        self.actionCheckForUpdates_2 = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("system-software-update")
        self.actionCheckForUpdates_2.setIcon(icon)
        self.actionCheckForUpdates_2.setObjectName("actionCheckForUpdates_2")
        self.mainWindowFileMenu.addAction(self.actionNewQcDocument)
        self.mainWindowFileMenu.addAction(self.actionOpenQcDocuments)
        self.mainWindowFileMenu.addAction(self.actionSaveQcDocument)
        self.mainWindowFileMenu.addAction(self.actionSaveQcDocumentAs)
        self.mainWindowFileMenu.addSeparator()
        self.mainWindowFileMenu.addAction(self.actionExitMpvQc)
        self.mainWindowVideoMenu.addAction(self.actionOpenVideoFile)
        self.mainWindowVideoMenu.addAction(self.actionOpenSubtitleFile)
        self.mainWindowVideoMenu.addAction(self.actionOpenNetworkStream)
        self.mainWindowVideoMenu.addSeparator()
        self.mainWindowVideoMenu.addAction(self.actionResizeVideoToOriginalResolution)
        self.menuWindowTitle.addAction(self.actionWindowTitleDefault)
        self.menuWindowTitle.addAction(self.actionWindowTitleFile)
        self.menuWindowTitle.addAction(self.actionWindowTitlePath)
        self.menuDocumentSettings.addAction(self.actionSaveVideoPathToDocument)
        self.menuDocumentSettings.addAction(self.actionSaveNickNameToDocument)
        self.menuLanguage.addAction(self.action_3)
        self.mainWindowSettingsMenu.addAction(self.actionEditNickname)
        self.mainWindowSettingsMenu.addAction(self.actionEditCommentTypes)
        self.mainWindowSettingsMenu.addAction(self.actionOpenBackupPreferences)
        self.mainWindowSettingsMenu.addAction(self.menuDocumentSettings.menuAction())
        self.mainWindowSettingsMenu.addSeparator()
        self.mainWindowSettingsMenu.addAction(self.menuWindowTitle.menuAction())
        self.mainWindowSettingsMenu.addAction(self.actionDarkTheme)
        self.mainWindowSettingsMenu.addSeparator()
        self.mainWindowSettingsMenu.addAction(self.menuLanguage.menuAction())
        self.mainWindowSettingsMenu.addSeparator()
        self.mainWindowSettingsMenu.addAction(self.actionEditMpvConf)
        self.mainWindowSettingsMenu.addAction(self.actionEditInputConf)
        self.mainWindowSettingsMenu.addSeparator()
        self.mainWindowAboutMenu.addAction(self.actionCheckForUpdates_2)
        self.mainWindowAboutMenu.addSeparator()
        self.mainWindowAboutMenu.addAction(self.actionAboutQt)
        self.mainWindowAboutMenu.addAction(self.actionAboutMpvQc)
        self.mainWindowMenuBar.addAction(self.mainWindowFileMenu.menuAction())
        self.mainWindowMenuBar.addAction(self.mainWindowVideoMenu.menuAction())
        self.mainWindowMenuBar.addAction(self.mainWindowSettingsMenu.menuAction())
        self.mainWindowMenuBar.addAction(self.mainWindowAboutMenu.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        self.mainWindowFileMenu.setTitle(_translate("MainWindow", "&File"))
        self.mainWindowVideoMenu.setTitle(_translate("MainWindow", "Vi&deo"))
        self.mainWindowSettingsMenu.setTitle(_translate("MainWindow", "Optio&ns"))
        self.menuWindowTitle.setTitle(_translate("MainWindow", "Window Title"))
        self.menuDocumentSettings.setTitle(_translate("MainWindow", "QC Document Export"))
        self.menuLanguage.setTitle(_translate("MainWindow", "Language"))
        self.mainWindowAboutMenu.setTitle(_translate("MainWindow", "Help"))
        self.actionNewQcDocument.setText(_translate("MainWindow", "&New QC Document"))
        self.actionNewQcDocument.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionOpenQcDocuments.setText(_translate("MainWindow", "&Open QC Documents..."))
        self.actionOpenQcDocuments.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSaveQcDocument.setText(_translate("MainWindow", "&Save QC Document"))
        self.actionSaveQcDocument.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSaveQcDocumentAs.setText(_translate("MainWindow", "S&ave QC Document As..."))
        self.actionSaveQcDocumentAs.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionExitMpvQc.setText(_translate("MainWindow", "&Exit mpvQC"))
        self.actionExitMpvQc.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionOpenVideoFile.setText(_translate("MainWindow", "Open &Video..."))
        self.actionOpenVideoFile.setShortcut(_translate("MainWindow", "Ctrl+Shift+O"))
        self.actionOpenNetworkStream.setText(_translate("MainWindow", "Open &Network Stream..."))
        self.actionOpenNetworkStream.setShortcut(_translate("MainWindow", "Ctrl+Alt+Shift+O"))
        self.actionResizeVideoToOriginalResolution.setText(_translate("MainWindow", "&Resize Video to Original Resolution"))
        self.actionResizeVideoToOriginalResolution.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.actionCheckForUpdates.setText(_translate("MainWindow", "&Check for Updates..."))
        self.actionAboutQt.setText(_translate("MainWindow", "About &Qt"))
        self.actionAboutMpvQc.setText(_translate("MainWindow", "About &mpvQC"))
        self.actionSettings.setText(_translate("MainWindow", "&Settings"))
        self.actionSettings.setShortcut(_translate("MainWindow", "Ctrl+Alt+S"))
        self.actionOpenSubtitleFile.setText(_translate("MainWindow", "&Open Subtitles..."))
        self.actionEditCommentTypes.setText(_translate("MainWindow", "Edit Comment Types..."))
        self.actionEditNickname.setText(_translate("MainWindow", "Edit Nickname..."))
        self.actionWindowTitleDefault.setText(_translate("MainWindow", "Default Title"))
        self.actionWindowTitleFile.setText(_translate("MainWindow", "Video File"))
        self.actionWindowTitlePath.setText(_translate("MainWindow", "Video Path"))
        self.actionDarkTheme.setText(_translate("MainWindow", "Enable Dark Theme"))
        self.actionEditMpvConf.setText(_translate("MainWindow", "Edit mpv.conf..."))
        self.actionEditInputConf.setText(_translate("MainWindow", "Edit input.conf..."))
        self.actionDocumentBackups.setText(_translate("MainWindow", "Enable Backups"))
        self.actionOpenBackupPreferences.setText(_translate("MainWindow", "Open Backup Preferences..."))
        self.actionSaveNickNameToDocument.setText(_translate("MainWindow", "Save Nickname"))
        self.actionSaveVideoPathToDocument.setText(_translate("MainWindow", "Save Video Path"))
        self.actionCheckForUpdates_2.setText(_translate("MainWindow", "Check for Updates..."))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
